)
})
prob_df <- bind_rows(prob_grid)
# Extract corrected curve
corrected_df <- data.frame(
Date      = corrected_result$dates,
Corrected = corrected_result$curves[[1]]
)
# Combine observed
obs_df <- df_patient %>% select(Date, Observed = Diam)
# # Plot everything
ggplot() +
# probable points
geom_point(data = prob_df,
aes(x = Date, y = Value, color = Probability),
size = 3, alpha = 0.8) +
scale_color_gradient(low = "lightblue", high = "darkblue", name = "Prob.") +
# observed
geom_line(data = obs_df,
aes(x = Date, y = Observed),
color = "black", linetype = "dotted", size = 1) +
# corrected
geom_line(data = corrected_df,
aes(x = Date, y = Corrected),
color = "#E91E63", size = 1.2, alpha = 0.7) +
labs(title = "Diameter Progression: Observed vs Corrected",
x     = "Date (years)",
y     = "Diameter (mm)",
caption = "• Black dotted = Observed\n• Pink solid = Corrected\n• Blue dots = Probable points") +
theme_minimal()
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
# Correct the df_patient
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
# Correct the df_patient
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Parameters
sdUS <- 3.5
sdCT <- 1.9
sp   <- 8
# Precompute discretization grids
limUS <- 3 * sdUS
limCT <- 3 * sdCT
pUSx  <- seq(-limUS, limUS, length.out = sp + 1)
pCTx  <- seq(-limCT, limCT, length.out = sp + 1)
pUSy  <- dnorm(pUSx, 0, sdUS)
pCTy  <- dnorm(pCTx, 0, sdCT)
# Build a data.frame of probability grids for each time point
prob_grid <- lapply(seq_len(nrow(df_patient)), function(i) {
diam  <- df_patient$Diam[i]
date  <- df_patient$Date[i]
isCT  <- df_patient$CT[i] == 1
if (isCT) {
x_offsets <- pCTx
probs     <- pCTy
} else {
x_offsets <- pUSx
probs     <- pUSy
}
data.frame(
Date     = date,
Value    = diam + x_offsets,
Probability = probs
)
})
prob_df <- bind_rows(prob_grid)
# Extract corrected curve
corrected_df <- data.frame(
Date      = corrected_result$dates,
Corrected = corrected_result$curves[[1]]
)
View(corrected_df)
dvtools::load_all(.)
devtools::load_all(.)
devtools::load_all()
#| echo = TRUE
library(ggplot2)
library(dplyr)
library(tidyr)
devtools::load_all()
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
# Correct the df_patient
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Assume df_patient and corrected_result are already in your environment:
# df_patient: data.frame with columns Date, Diameter, CT (TRUE = CT, FALSE = US)
# corrected_result <- correct_diameter_single(df_patient, dlim_inf = 0, dlim_sup = 30)
# corrected_result$curves[[1]] is the first corrected curve
# Parameters
sdUS <- 3.5
sdCT <- 1.9
sp   <- 8
# Precompute discretization grids
limUS <- 3 * sdUS
limCT <- 3 * sdCT
pUSx  <- seq(-limUS, limUS, length.out = sp + 1)
pCTx  <- seq(-limCT, limCT, length.out = sp + 1)
pUSy  <- dnorm(pUSx, 0, sdUS)
pCTy  <- dnorm(pCTx, 0, sdCT)
# Build a data.frame of probability grids for each time point
prob_grid <- lapply(seq_len(nrow(df_patient)), function(i) {
diam  <- df_patient$Diam[i]
date  <- df_patient$Date[i]
isCT  <- df_patient$CT[i] == 1
if (isCT) {
x_offsets <- pCTx
probs     <- pCTy
} else {
x_offsets <- pUSx
probs     <- pUSy
}
data.frame(
Date     = date,
Value    = diam + x_offsets,
Probability = probs
)
})
prob_df <- bind_rows(prob_grid)
# Extract corrected curve
corrected_df <- data.frame(
Date      = corrected_result$dates,
Corrected = corrected_result$curves[[1]]
)
# Combine observed
obs_df <- df_patient %>% select(Date, Observed = Diam)
# # Plot everything
ggplot() +
# probable points
geom_point(data = prob_df,
aes(x = Date, y = Value, color = Probability),
size = 3, alpha = 0.8) +
scale_color_gradient(low = "lightblue", high = "darkblue", name = "Prob.") +
# observed
geom_line(data = obs_df,
aes(x = Date, y = Observed),
color = "black", linetype = "dotted", size = 1) +
# corrected
geom_line(data = corrected_df,
aes(x = Date, y = Corrected),
color = "#E91E63", size = 1.2, alpha = 0.7) +
labs(title = "Diameter Progression: Observed vs Corrected",
x     = "Date (years)",
y     = "Diameter (mm)",
caption = "• Black dotted = Observed\n• Pink solid = Corrected\n• Blue dots = Probable points") +
theme_minimal()
#| echo = FALSE
library(ggplot2)
library(dplyr)
library(tidyr)
devtools::load_all()
# Patient dataframe
df_patient <- data.frame(
ID = as.factor(c("1", "1", "1", "1", "1", "1", "1", "1", "1")),
Date = c(2015, 2016, 2017, 2020, 2021, 2022.5, 2023, 2024, 2025),
Diam = c(30, 35, 34, 53, 50, 54, 53, 55, 58),
CT = as.factor(c(1, 0, 0, 1, 0, 0, 0, 0, 1))
)
# Correct the df_patient
corrected_result <- ImgOMIC::correct_diameter_single(df_patient, sp = 8)
# Select the first corrected curve (if more than one)
corrected_curve <- corrected_result$curves[[1]]
corrected_dates <- corrected_result$dates
# Assume df_patient and corrected_result are already in your environment:
# df_patient: data.frame with columns Date, Diameter, CT (TRUE = CT, FALSE = US)
# corrected_result <- correct_diameter_single(df_patient, dlim_inf = 0, dlim_sup = 30)
# corrected_result$curves[[1]] is the first corrected curve
# Parameters
sdUS <- 3.5
sdCT <- 1.9
sp   <- 8
# Precompute discretization grids
limUS <- 3 * sdUS
limCT <- 3 * sdCT
pUSx  <- seq(-limUS, limUS, length.out = sp + 1)
pCTx  <- seq(-limCT, limCT, length.out = sp + 1)
pUSy  <- dnorm(pUSx, 0, sdUS)
pCTy  <- dnorm(pCTx, 0, sdCT)
# Build a data.frame of probability grids for each time point
prob_grid <- lapply(seq_len(nrow(df_patient)), function(i) {
diam  <- df_patient$Diam[i]
date  <- df_patient$Date[i]
isCT  <- df_patient$CT[i] == 1
if (isCT) {
x_offsets <- pCTx
probs     <- pCTy
} else {
x_offsets <- pUSx
probs     <- pUSy
}
data.frame(
Date     = date,
Value    = diam + x_offsets,
Probability = probs
)
})
prob_df <- bind_rows(prob_grid)
# Extract corrected curve
corrected_df <- data.frame(
Date      = corrected_result$dates,
Corrected = corrected_result$curves[[1]]
)
# Combine observed
obs_df <- df_patient %>% select(Date, Observed = Diam)
# # Plot everything
ggplot() +
# probable points
geom_point(data = prob_df,
aes(x = Date, y = Value, color = Probability),
size = 3, alpha = 0.8) +
scale_color_gradient(low = "lightblue", high = "darkblue", name = "Prob.") +
# observed
geom_line(data = obs_df,
aes(x = Date, y = Observed),
color = "black", linetype = "dotted", size = 1) +
# corrected
geom_line(data = corrected_df,
aes(x = Date, y = Corrected),
color = "#E91E63", size = 1.2, alpha = 0.7) +
labs(title = "Diameter Progression: Observed vs Corrected",
x     = "Date (years)",
y     = "Diameter (mm)",
caption = "• Black dotted = Observed\n• Pink solid = Corrected\n• Blue dots = Probable points") +
theme_minimal()
#| echo = FALSE
library(dplyr)
library(ggplot2)
library(lubridate)
library(ImgOMIC)
set.seed(42)
# 1. Create dummy data for 10 patients, each with 5–10 measurements
df_raw <- bind_rows(lapply(1:10, function(id) {
n      <- sample(5:10, 1)
dates  <- sort(sample(seq(as.Date("2015-01-01"), as.Date("2025-12-31"), by = "day"), n))
# Simulate a baseline and linear growth plus noise
base   <- runif(1, 20, 40)
years  <- as.numeric(difftime(dates, min(dates), units = "days")) / 365
growth <- runif(1, 3, 10)
diam   <- base + growth * years + rnorm(n, 0, runif(1, 1.5, 4))
ct     <- sample(c(0, 1), n, replace = TRUE)
data.frame(
ID   = as.character(id),
Date = dates,
Diam = diam,
CT   = ct
)
}))
# 2. Apply multi‐patient correction
df_corrected <- correct_diameters_all(
df_raw,
sdUS     = 3.5,
sdCT     = 1.9,
sp       = 6,
dlim_inf = 0,
dlim_sup = 50
)
# 2. Apply multi‐patient correction
df_corrected <- correct_diameters_all(
df_raw,
sdUS     = 3.5,
sdCT     = 1.9,
sp       = 6,
dlim_inf = 0,
dlim_sup = 50
)
#| echo = FALSE
library(dplyr)
library(ggplot2)
library(lubridate)
devtools::load_all()
set.seed(42)
# 1. Create dummy data for 10 patients, each with 5–10 measurements
df_raw <- bind_rows(lapply(1:10, function(id) {
n      <- sample(5:10, 1)
dates  <- sort(sample(seq(as.Date("2015-01-01"), as.Date("2025-12-31"), by = "day"), n))
# Simulate a baseline and linear growth plus noise
base   <- runif(1, 20, 40)
years  <- as.numeric(difftime(dates, min(dates), units = "days")) / 365
growth <- runif(1, 3, 10)
diam   <- base + growth * years + rnorm(n, 0, runif(1, 1.5, 4))
ct     <- sample(c(0, 1), n, replace = TRUE)
data.frame(
ID   = as.character(id),
Date = dates,
Diam = diam,
CT   = ct
)
}))
# 2. Apply multi‐patient correction
df_corrected <- correct_diameters_all(
df_raw,
sdUS     = 3.5,
sdCT     = 1.9,
sp       = 6,
dlim_inf = 0,
dlim_sup = 50
)
# 3. Prepare for plotting: merge raw and corrected diameters
plot_df <- df_corrected %>%
select(ID, Date, Diam_corrected = Diam, corrected) %>%
left_join(df_raw %>% rename(Diam_raw = Diam), by = c("ID", "Date")) %>%
pivot_longer(
cols        = c(Diam_raw, Diam_corrected),
names_to    = "Type",
values_to   = "Diameter",
names_ptypes = list(Type = factor(levels = c("Diam_raw", "Diam_corrected")))
)
#| echo = FALSE
library(dplyr)
library(ggplot2)
library(lubridate)
devtools::load_all()
set.seed(42)
# 1. Create dummy data for 10 patients, each with 5–10 measurements
df_raw <- bind_rows(lapply(1:10, function(id) {
n      <- sample(5:10, 1)
dates  <- sort(sample(seq(as.Date("2015-01-01"), as.Date("2025-12-31"), by = "day"), n))
# Simulate a baseline and linear growth plus noise
base   <- runif(1, 20, 40)
years  <- as.numeric(difftime(dates, min(dates), units = "days")) / 365
growth <- runif(1, 3, 10)
diam   <- base + growth * years + rnorm(n, 0, runif(1, 1.5, 4))
ct     <- sample(c(0, 1), n, replace = TRUE)
data.frame(
ID   = as.character(id),
Date = dates,
Diam = diam,
CT   = ct
)
}))
# 2. Apply multi‐patient correction
df_corrected <- correct_diameters_all(
df_raw,
sdUS     = 3.5,
sdCT     = 1.9,
sp       = 6,
dlim_inf = 0,
dlim_sup = 50
)
# 3. Prepare for plotting: merge raw and corrected diameters
plot_df <- df_corrected %>%
select(ID, Date, Diam_corrected = Diam, corrected) %>%
left_join(df_raw %>% rename(Diam_raw = Diam), by = c("ID", "Date")) %>%
tidyr::pivot_longer(
cols        = c(Diam_raw, Diam_corrected),
names_to    = "Type",
values_to   = "Diameter",
names_ptypes = list(Type = factor(levels = c("Diam_raw", "Diam_corrected")))
)
# 4. Plot: raw in grey, corrected in pink, faceted by patient
ggplot(plot_df, aes(x = Date, y = Diameter, color = Type)) +
geom_point(alpha = 0.6) +
geom_line(aes(group = interaction(ID, Type)), alpha = 0.8) +
scale_color_manual(
values = c(
"Diam_raw"        = "grey70",
"Diam_corrected"  = "#E91E63"
),
labels = c(
"Raw measurements",
"Corrected measurements"
),
name = NULL
) +
facet_wrap(~ ID, scales = "free_y", ncol = 5) +
labs(
title   = "Raw vs. Corrected Aneurysm Diameter Trajectories",
x       = "Date",
y       = "Diameter (mm)"
) +
theme_minimal() +
theme(
legend.position = "bottom",
strip.text      = element_text(face = "bold")
)
#| echo = FALSE
library(dplyr)
library(ggplot2)
library(lubridate)
devtools::load_all()
# 1. Manually create raw data for 5 patients
df_raw <- data.frame(
ID = rep(as.character(1:5), each = 6),
Date = as.Date(c(
# Patient 1
"2016-01-15", "2017-03-10", "2018-06-20", "2019-09-05", "2020-12-01", "2022-02-14",
# Patient 2
"2015-05-01", "2016-07-12", "2017-11-30", "2019-04-25", "2020-08-19", "2021-10-10",
# Patient 3
"2017-02-20", "2018-05-15", "2019-08-08", "2020-10-30", "2022-01-01", "2023-03-20",
# Patient 4
"2015-12-05", "2016-12-05", "2018-01-10", "2019-03-15", "2020-05-20", "2021-07-25",
# Patient 5
"2016-04-10", "2017-09-18", "2018-12-22", "2020-02-28", "2021-06-06", "2022-11-11"
)),
Diam = c(
# P1
30, 32, 37, 35, 33, 42,
# P2
25, 28, 30, 29, 35, 38,
# P3
40, 47, 45, 47, 54, 52,
# P4
20, 22, 28, 27, 29, 31,
# P5
33, 34, 36, 50, 49, 44
),
CT = c(
# P1
1, 0, 0, 1, 0, 1,
# P2
0, 0, 1, 0, 1, 0,
# P3
1, 1, 0, 0, 1, 0,
# P4
0, 1, 0, 1, 0, 1,
# P5
1, 0, 1, 0, 1, 0
)
)
# 2. Apply multi‐patient correction
df_corrected <- correct_diameters_all(
df_raw,
sdUS     = 3.5,
sdCT     = 1.9,
sp       = 6,
dlim_inf = 0,
dlim_sup = 50
)
# 3. Prepare for plotting: merge raw and corrected diameters
plot_df <- df_corrected %>%
select(ID, Date, Diam_corrected = Diam, corrected) %>%
left_join(df_raw %>% rename(Diam_raw = Diam), by = c("ID", "Date")) %>%
tidyr::pivot_longer(
cols        = c(Diam_raw, Diam_corrected),
names_to    = "Type",
values_to   = "Diameter",
names_ptypes = list(Type = factor(levels = c("Diam_raw", "Diam_corrected")))
)
# 4. Plot: raw in grey, corrected in pink, faceted by patient
ggplot(plot_df, aes(x = Date, y = Diameter, color = Type)) +
geom_point(alpha = 0.6) +
geom_line(aes(group = interaction(ID, Type)), alpha = 0.8) +
scale_color_manual(
values = c(
"Diam_raw"        = "grey70",
"Diam_corrected"  = "#E91E63"
),
labels = c(
"Raw measurements",
"Corrected measurements"
),
name = NULL
) +
facet_wrap(~ ID, scales = "free_y", ncol = 5) +
labs(
title   = "Raw vs. Corrected Aneurysm Diameter Trajectories",
x       = "Date",
y       = "Diameter (mm)"
) +
theme_minimal() +
theme(
legend.position = "bottom",
strip.text      = element_text(face = "bold")
)
