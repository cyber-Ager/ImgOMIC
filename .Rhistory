tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
ggplot(tb2plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
tb3plot <- tb3_c$longitudinal[tb3_c$longitudinal$id %in% unique(tb2plot$id),]
ggplot(tb3plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
length(unique(tb3plot$id))
length(unique(tb2plot$id))
sum(is.na(tb3plot$aortic_diameter))
# Represent both plots
tb2plot <- tb2$longitudinal %>%
group_by(id) %>%
tidyr::nest() %>%
dplyr::mutate(
presence_mir100 = purrr::map_dbl(data, function(x) {
if (all(is.na(x$mir100_norm_val))){
0
}else {1}
})) %>%
dplyr::filter(presence_mir100 == 1) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
ggplot(tb2plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
# Save the interested longitudinal datasets
# Uncorrected dataset
raw_lon <- as.data.frame(tb2$longitudinal)
raw_lon$id <- as.character(raw_lon$id)
raw_lon <- raw_lon %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Diameter corrected dataset with the growth and velocity values
cor_lon2 <- as.data.frame(tb3_c$longitudinal)
cor_lon2$id <- as.character(cor_lon2$id)
cor_lon2 <- cor_lon2 %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Get just the rows with the values
raw_lon <- raw_lon[complete.cases(raw_lon$mir100_norm_val, raw_lon$aortic_diameter), ]
cor_lon2 <- cor_lon2[complete.cases(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter), ]
library(ggplot2)
ggplot(raw_lon, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(raw_lon$mir100_norm_val, raw_lon$aortic_diameter)
ggplot(raw_lon, aes(x = mir100_norm_val, y = vmean_trend)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(raw_lon) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(raw_lon$mir100_norm_val, raw_lon$vel_mean)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vmean_trend)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_mean)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vel_real)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_mean)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vel_real)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_real)
library(ggplot2)
ggplot(raw_lon, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(raw_lon$mir100_norm_val, raw_lon$aortic_diameter)
ggplot(raw_lon, aes(x = mir100_norm_val, y = vmean_trend)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(raw_lon) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(raw_lon$mir100_norm_val, raw_lon$vel_real)
summary(cor_lon2)
summary(as.data.frame(cor_lon2))
class(cor_lon2)
cor_lon2 %>%
dplyr::select(where(is.numeric)) %>%
summary()
class(cor_lon2$id)
classÃ§(cor_lon2$vel_mean)
class(cor_lon2$vel_mean)
summary(cor_lon2$vel_mean)
summary(raw_lon$vel_mean)
class(raw_lon$vel_mean)
class(as.nummeric(raw_lon$vel_mean))
class(as.numeric(raw_lon$vel_mean))
summary(as.numeric(raw_lon$vel_mean))
summary(as.numeric(raw_lon$aortic_diameter))
summary(as.numeric(cor_lon2$aortic_diameter))
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vel_real)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_real)
summary(as.data.frame(cor_lon2))
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vel_real)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_real)
class(cor_lon2)
View(cor_lon2)
class(c(cor_lon2$mir100_norm_val, cor_lon2$vel_real))
class(c(cor_lon2$mir100_norm_val))
class(c(raw_lon$mir100_norm_val))
class(c(raw_lon$aortic_diameter))
class(c(cor_lon2$aortic_diameter))
functionals$pre20_create_growth
functionals$utils_vel_real
library(dplyr)
library(an9elproject)
# devtools::install_github("cyber-Ager/ImgOMIC")
# Get the last version of the project
tb <- get_project("tabs", version = "2.1.0.2")
# Preprocess growth
functionals <- tb$functionals
tb2 <- functionals$preprocessing_growth(tb)
# Convert id_long into date format
tb2$longitudinal$id_long <- as.Date(as.character(tb2$longitudinal$id_long))
tb2_c <- tb2
# Create the neccessary columns to correct Diameter measure
tb2_c$longitudinal$ID <- tb2$longitudinal$id
tb2_c$longitudinal$Date <- tb2$longitudinal$id_long
tb2_c$longitudinal$Diam <- tb2$longitudinal$aortic_diameter
tb2_c$longitudinal$CT <- as.numeric(tb2$longitudinal$imaging == "CT-scan")
tb2_cf <- tb2_c$longitudinal %>% dplyr::select(ID, Date, Diam, CT)
# Correct diameter values
tb2_cf <- ImgOMIC::correct_diameters_all(tb2_cf, sp = 10)
# Ensure that ALL the IDs are the same
sum(paste0(tb2$longitudinal$id, tb2$longitudinal$id_long) == paste0(tb2_cf$ID, tb2_cf$Date))
# change the diameter values
tb2_c$longitudinal$aortic_diameter <- tb2_cf$Diam
tb2_c$longitudinal$corrected <- tb2_cf$corrected
# Remove pre-calculated growth
tb2_c$data <- tb2_c$data %>% dplyr::select(-trend, -vmean_trend)
tb2_c$longitudinal <- tb2_c$longitudinal %>% dplyr::select(-interval_3,
-interval_5,
-years_0,
-vel_mean,
-vel_real,
-vel_mean_int3,
-vel_mean_int5,
-vel_real_int3,
-vel_real_int5,
-ID, -Date, -CT)
# Save just the patients that have been corrected
tb3_c <- tb2_c
tb3_c$longitudinal <- tb3_c$longitudinal %>% dplyr::filter(corrected)
# Re-calculate growth measurements
tb3_c <- functionals$pre16_create_intervals(tb3_c)
tb3_c <- functionals$pre20_create_growth(tb3_c)
tb3_c <- functionals$pre21_create_trend(tb3_c)
# Represent both plots
tb2plot <- tb2$longitudinal %>%
group_by(id) %>%
tidyr::nest() %>%
dplyr::mutate(
presence_mir100 = purrr::map_dbl(data, function(x) {
if (all(is.na(x$mir100_norm_val))){
0
}else {1}
})) %>%
dplyr::filter(presence_mir100 == 1) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
ggplot(tb2plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
tb3plot <- tb3_c$longitudinal[tb3_c$longitudinal$id %in% unique(tb2plot$id),]
ggplot(tb3plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
length(unique(tb3plot$id))
length(unique(tb2plot$id))
sum(is.na(tb3plot$aortic_diameter))
# Save the interested longitudinal datasets
# Uncorrected dataset
raw_lon <- as.data.frame(tb2$longitudinal)
raw_lon$id <- as.character(raw_lon$id)
raw_lon <- raw_lon %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Diameter corrected dataset with the growth and velocity values
cor_lon2 <- as.data.frame(tb3_c$longitudinal)
cor_lon2$id <- as.character(cor_lon2$id)
cor_lon2 <- cor_lon2 %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Get just the rows with the values
raw_lon <- raw_lon[complete.cases(raw_lon$mir100_norm_val, raw_lon$aortic_diameter), ]
cor_lon2 <- cor_lon2[complete.cases(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter), ]
library(ggplot2)
ggplot(raw_lon, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(raw_lon$mir100_norm_val, raw_lon$aortic_diameter)
ggplot(raw_lon, aes(x = mir100_norm_val, y = vmean_trend)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(raw_lon) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(raw_lon$mir100_norm_val, raw_lon$vel_real)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = vel_real)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_real)
class(cor_lon2)
library(MASS)
weights <- 1 / (raw_lon$mir100_norm_error / raw_lon$mir100_norm_val)
model <- rlm(aortic_diameter ~ mir100_norm_val, data = raw_lon, weights = weights)
summary(model)
coef_estimate <- model$coefficients[2]
se_coef <- summary(model)$coefficients[2, 2]
t_stat <- coef_estimate / se_coef
p_value_approx <- 2 * (1 - pnorm(abs(t_stat)))
p_value_approx
weights <- 1 / (cor_lon2$mir100_norm_error / cor_lon2$mir100_norm_val)
model <- rlm(aortic_diameter ~ mir100_norm_val, data = cor_lon2, weights = weights)
summary(model)
coef_estimate <- model$coefficients[2]
se_coef <- summary(model)$coefficients[2, 2]
t_stat <- coef_estimate / se_coef
p_value_approx <- 2 * (1 - pnorm(abs(t_stat)))
p_value_approx
# Arrange and calculate instant growth
tb2$longitudinal <- tb2$longitudinal %>%
arrange(id, id_long) %>%
group_by(id) %>%
mutate(
# Previous and next values
lag_diam = lag(aortic_diameter),
lead_diam = lead(aortic_diameter),
lag_date = lag(id_long),
lead_date = lead(id_long),
# Velocity with previous point
vel_prev = ifelse(!is.na(lag_diam) & !is.na(lag_date),
(aortic_diameter - lag_diam) / as.numeric(id_long - lag_date),
NA),
# Velocity with next point
vel_next = ifelse(!is.na(lead_diam) & !is.na(lead_date),
(lead_diam - aortic_diameter) / as.numeric(lead_date - id_long),
NA),
# Instant growth
instant_growth = case_when(
!is.na(vel_prev) & !is.na(vel_next) ~ (vel_prev + vel_next) / 2,
!is.na(vel_prev) ~ vel_prev,
!is.na(vel_next) ~ vel_next,
TRUE ~ NA_real_
)
) %>%
select(-lag_diam, -lead_diam, -lag_date, -lead_date, -vel_prev, -vel_next) %>%
ungroup()
class(tb2$longitudinal$id_long)
# Arrange and calculate instant growth
tb2$longitudinal <- tb2$longitudinal %>%
dplyr::arrange(id, id_long) %>%
dplyr::group_by(id) %>%
dplyr::mutate(
# Previous and next values
lag_diam = lag(aortic_diameter),
lead_diam = lead(aortic_diameter),
lag_date = lag(id_long),
lead_date = lead(id_long),
# Velocity with previous point
vel_prev = ifelse(!is.na(lag_diam) & !is.na(lag_date),
(aortic_diameter - lag_diam) / as.numeric(id_long - lag_date),
NA),
# Velocity with next point
vel_next = ifelse(!is.na(lead_diam) & !is.na(lead_date),
(lead_diam - aortic_diameter) / as.numeric(lead_date - id_long),
NA),
# Instant growth
instant_growth = case_when(
!is.na(vel_prev) & !is.na(vel_next) ~ (vel_prev + vel_next) / 2,
!is.na(vel_prev) ~ vel_prev,
!is.na(vel_next) ~ vel_next,
TRUE ~ NA_real_
)
) %>%
dplyr::select(-lag_diam, -lead_diam, -lag_date, -lead_date, -vel_prev, -vel_next) %>%
dplyr::ungroup()
# Arrange and calculate instant growth
tb2$longitudinal <- tb2$longitudinal %>%
dplyr::arrange(id, id_long) %>%
dplyr::group_by(id) %>%
dplyr::mutate(
# Previous and next values
lag_diam = lag(aortic_diameter),
lead_diam = lead(aortic_diameter),
lag_date = lag(id_long),
lead_date = lead(id_long),
# Velocity with previous point
vel_prev = ifelse(!is.na(lag_diam) & !is.na(lag_date),
(aortic_diameter - lag_diam) / as.numeric(id_long - lag_date),
NA),
# Velocity with next point
vel_next = ifelse(!is.na(lead_diam) & !is.na(lead_date),
(lead_diam - aortic_diameter) / as.numeric(lead_date - id_long),
NA),
# Instant growth
instant_growth = case_when(
!is.na(vel_prev) & !is.na(vel_next) ~ (vel_prev + vel_next) / 2,
!is.na(vel_prev) ~ vel_prev,
!is.na(vel_next) ~ vel_next,
TRUE ~ NA_real_
)
) %>%
dplyr::select(-lag_diam, -lead_diam, -lag_date, -lead_date, -vel_prev, -vel_next) %>%
dplyr::ungroup()
# Arrange and calculate instant growth
tb3_c$longitudinal <- tb3_c$longitudinal %>%
dplyr::arrange(id, id_long) %>%
dplyr::group_by(id) %>%
dplyr::mutate(
# Previous and next values
lag_diam = lag(aortic_diameter),
lead_diam = lead(aortic_diameter),
lag_date = lag(id_long),
lead_date = lead(id_long),
# Velocity with previous point
vel_prev = ifelse(!is.na(lag_diam) & !is.na(lag_date),
(aortic_diameter - lag_diam) / as.numeric(id_long - lag_date),
NA),
# Velocity with next point
vel_next = ifelse(!is.na(lead_diam) & !is.na(lead_date),
(lead_diam - aortic_diameter) / as.numeric(lead_date - id_long),
NA),
# Instant growth
instant_growth = case_when(
!is.na(vel_prev) & !is.na(vel_next) ~ (vel_prev + vel_next) / 2,
!is.na(vel_prev) ~ vel_prev,
!is.na(vel_next) ~ vel_next,
TRUE ~ NA_real_
)
) %>%
dplyr::select(-lag_diam, -lead_diam, -lag_date, -lead_date, -vel_prev, -vel_next) %>%
dplyr::ungroup()
# Represent both plots
tb2plot <- tb2$longitudinal %>%
group_by(id) %>%
tidyr::nest() %>%
dplyr::mutate(
presence_mir100 = purrr::map_dbl(data, function(x) {
if (all(is.na(x$mir100_norm_val))){
0
}else {1}
})) %>%
dplyr::filter(presence_mir100 == 1) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
ggplot(tb2plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
tb3plot <- tb3_c$longitudinal[tb3_c$longitudinal$id %in% unique(tb2plot$id),]
ggplot(tb3plot, aes(x = id_long, y = aortic_diameter, group = id, colour = id)) +
geom_line() +
labs(x = "Measure of miRNA100", y = "Aortic diameter")  +
theme(legend.position="none")
length(unique(tb3plot$id))
length(unique(tb2plot$id))
sum(is.na(tb3plot$aortic_diameter))
# Save the interested longitudinal datasets
# Uncorrected dataset
raw_lon <- as.data.frame(tb2$longitudinal)
raw_lon$id <- as.character(raw_lon$id)
raw_lon <- raw_lon %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Diameter corrected dataset with the growth and velocity values
cor_lon2 <- as.data.frame(tb3_c$longitudinal)
cor_lon2$id <- as.character(cor_lon2$id)
cor_lon2 <- cor_lon2 %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Get just the rows with the values
raw_lon <- raw_lon[complete.cases(raw_lon$mir100_norm_val, raw_lon$aortic_diameter), ]
cor_lon2 <- cor_lon2[complete.cases(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter), ]
# Save the interested longitudinal datasets
# Uncorrected dataset
raw_lon <- as.data.frame(tb2$longitudinal)
raw_lon$id <- as.character(raw_lon$id)
raw_lon <- raw_lon %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Diameter corrected dataset with the growth and velocity values
cor_lon2 <- as.data.frame(tb3_c$longitudinal)
cor_lon2$id <- as.character(cor_lon2$id)
cor_lon2 <- cor_lon2 %>%
left_join(tb2$data[, c("id", "trend", "vmean_trend")], by = "id") %>%
dplyr::group_by(id) %>%
fill(vel_mean, .direction = "downup") %>%
fill(vel_real, .direction = "downup") %>%
dplyr::ungroup()
# Get just the rows with the values
raw_lon <- raw_lon[complete.cases(raw_lon$mir100_norm_val, raw_lon$aortic_diameter), ]
cor_lon2 <- cor_lon2[complete.cases(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter), ]
View(raw_lon)
View(cor_lon2)
library(ggplot2)
ggplot(raw_lon, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(raw_lon$mir100_norm_val, raw_lon$aortic_diameter)
ggplot(raw_lon, aes(x = mir100_norm_val, y = instant_growth)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(raw_lon) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(raw_lon$mir100_norm_val, raw_lon$vel_real)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(cor_lon2$mir100_norm_val, cor_lon2$aortic_diameter)
ggplot(cor_lon2, aes(x = mir100_norm_val, y = instant_growth)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(cor_lon2) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(cor_lon2$mir100_norm_val, cor_lon2$vel_real)
class(cor_lon2)
library(ggplot2)
ggplot(raw_lon, aes(x = mir100_norm_val, y = aortic_diameter)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
cor(raw_lon$mir100_norm_val, raw_lon$aortic_diameter)
ggplot(raw_lon, aes(x = mir100_norm_val, y = instant_growth)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Measure of miRNA100", y = "Aortic diameter")
# summary(as.data.frame(raw_lon) %>% dplyr::select(aortic_diameter, vel_mean, vel_real))
cor(raw_lon$mir100_norm_val, raw_lon$instant_growth)
functionals$preprocessing_growth()
View(raw_lon)
